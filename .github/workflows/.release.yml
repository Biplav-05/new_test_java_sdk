name: Release & Publish to Maven Central

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Specify release type: regular, alpha, beta, or rc'
        required: true
        default: 'regular'

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      RELEASE_TYPE: ${{ github.event.inputs.release-type }}

    steps:
      # Validate the branch
      - name: Validate branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "Error: This workflow can only be run on the main branch."
            exit 1
          fi

      # Validate the release type
      - name: Validate release type
        run: |
          if [[ "$RELEASE_TYPE" != "regular" && "$RELEASE_TYPE" != "alpha" && "$RELEASE_TYPE" != "beta" && "$RELEASE_TYPE" != "rc" ]]; then
            echo "Error: Invalid release type '$RELEASE_TYPE'. It must be one of: regular, alpha, beta, or rc."
            exit 1
          fi

      # Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v3

      # Setup Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm ci

      # Set Git user
      - name: Set Git user
        run: |
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"

      # Set up GPG key
      - name: Set up GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --import --batch --yes
          echo "$PASSPHRASE" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --edit-key YOUR_GPG_KEY_ID trust quit

      # Run release-it
      - name: Run release-it
        run: |
          if [ "$RELEASE_TYPE" == "regular" ]; then
            npx release-it
          else
            npx release-it --preRelease="$RELEASE_TYPE"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

      # Print success message if release-it completes successfully
      - name: Print success message
        if: success()
        run: echo "Release and publishing completed successfully!"

      # Handle failure
      - name: Handle failure
        if: failure()
        run: echo "Release process failed."
